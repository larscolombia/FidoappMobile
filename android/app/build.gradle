plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localProperties.load(localPropertiesFile.newDataInputStream())
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1'
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'com.fidoapp.newcustomer'
    compileSdkVersion 35

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true // Agrega esta línea
    }

    defaultConfig {
        applicationId "com.fidoapp.newcustomer"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 3
        versionName "1.5.0"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
} 

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3' // Asegúrate de incluir esta línea
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:31.2.0')

}

flutter {
    source = "../.."
<<<<<<< HEAD
=======
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Cambiado a kotlin_version
    implementation 'com.google.firebase:firebase-analytics'
    
    // Agregar Firebase Messaging
    implementation 'com.google.firebase:firebase-messaging:23.1.0'  // Asegúrate de usar la versión más reciente

    // Usa la última BOM disponible para manejar las versiones de Firebase
    implementation platform('com.google.firebase:firebase-bom:31.2.0') 

    // Otros paquetes
    implementation 'phonepe.intentsdk.android.release:IntentSDK:2.3.0'

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.gms:play-services-measurement-api:22.2.0' 
    implementation 'com.google.android.gms:play-services-measurement-impl:22.2.0'

}

apply plugin: 'com.google.gms.google-services'
configurations {
    all {
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
    }
>>>>>>> e79cb2ffbbf2be477cda476507478dde18e3e744
}